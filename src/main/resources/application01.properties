# \u914D\u7F6E\u903B\u8F91\u5E93\u540D
spring.shardingsphere.datasource.names=m1

# \u914D\u7F6E\u903B\u8F91\u5E93\u4E0E\u771F\u5B9E\u5E93\u7684\u5BF9\u5E94\u5173\u7CFB
spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://192.168.1.18:3306/cource_db
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

# \u914D\u7F6E cource_1\u548Ccource_2 \u8868\u5206\u5E03\u60C5\u51B5 \u914D\u7F6E\u8868\u662F\u4EC0\u4E48\u540D\u5B57\u4E14\u5206\u5E03\u5728\u54EA\u4E2A\u5E93\u91CC\u9762
spring.shardingsphere.rules.sharding.tables.cource.actual-data-nodes=m1.cource_$->{1..2}

#\u914D\u7F6E\u5206\u8868\u5B57\u6BB5\u751F\u6210\u7B56\u7565  \u96EA\u82B1\u7B97\u6CD5
spring.shardingsphere.sharding.tables.cource.keyGenerator.column=id
spring.shardingsphere.sharding.tables.cource.keyGenerator.type=SNOWFLAKE

# \u914D\u7F6E \u5206\u7247\u7B97\u6CD5  \u56E0\u4E3A\u6211\u4EEC\u6D4B\u8BD5\u7684\u662FuserId\u5076\u6570\u5B58\u50A8cource_1\u8868 \u5947\u6570\u5B58\u50A8cource_2\u8868
spring.shardingsphere.sharding.tables.cource.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.cource.table-strategy.inline.algorithm-expression=cource_$->{id % 2 +1}

# \u4E00\u4E2A\u5B9E\u4F53\u7C7B\u5BF9\u5E94\u591A\u4E2A\u8868\u65F6\u9700\u8981\u914D\u7F6E\u4E0B\u9762\u5185\u5BB9
spring.main.allow-bean-definition-overriding=true

# \u6253\u5F00sql\u8F93\u51FA\u65E5\u5FD7
spring.shardingsphere.properties.sql.show=true